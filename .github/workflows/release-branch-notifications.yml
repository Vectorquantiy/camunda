# description: The workflow sends notifications to Slack for activities on release branches
# type: CI Helper
# owner: @camunda/monorepo-devops-team
---
name: Release Branch Notifications

on:
  pull_request:
    branches: ['release-*']
    types: [labeled, closed]
  pull_request_target:
    types: [labeled]
  push:
    branches: ['release-*']

jobs:
  notify-release-activity:
    name: Send Slack notification for release branch activity
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions: {}  # GITHUB_TOKEN unused in this job
    if: >
      (
        (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') &&
        github.event.action == 'closed' &&
        github.event.pull_request.merged == true &&
        startsWith(github.event.pull_request.base.ref, 'release-')
      ) || (
        (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') &&
        github.event.action == 'labeled' &&
        startsWith(github.event.label.name, 'release-') 
      ) || (
        github.event_name == 'push' &&
        startsWith(github.ref_name, 'release-') 
      ) 
    defaults:
      run:
        shell: bash
    steps:
      - name: Determine action type and extract data
        id: extract-data
        run: |
          # Set bash strict mode for better error handling
          set -euo pipefail
          
          # Initialize variables
          ACTION_TYPE=""
          BRANCH_NAME=""
          AUTHOR=""
          LINK_TEXT=""
          LINK_URL=""
          PR_TITLE=""
          
          echo "üîç Processing event: ${{ github.event_name }} - ${{ github.event.action }}"
          
          # Determine event type and extract data
          if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "pull_request_target" ]]; then
            BRANCH_NAME="${{ github.event.pull_request.base.ref }}"
            AUTHOR="${{ github.event.pull_request.user.login }}"
            PR_TITLE="${{ github.event.pull_request.title }}"
            
            # Truncate long titles for better display
            if [[ ${#PR_TITLE} -gt 80 ]]; then
              PR_TITLE="${PR_TITLE:0:77}..."
            fi
            
            if [[ "${{ github.event.action }}" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
              ACTION_TYPE="MERGE COMPLETED"
              LINK_TEXT="Merged PR: #${{ github.event.pull_request.number }} - ${PR_TITLE}"
              LINK_URL="${{ github.event.pull_request.html_url }}"
            elif [[ "${{ github.event.action }}" == "labeled" ]]; then
              ACTION_TYPE="BACKPORTING"
              # For backport labels, the base branch might not be release-*
              BRANCH_NAME="${{ github.event.pull_request.base.ref }}"
              LINK_TEXT="PR: #${{ github.event.pull_request.number }} - ${PR_TITLE} (Label: ${{ github.event.label.name }})"
              LINK_URL="${{ github.event.pull_request.html_url }}"
            fi
            
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            ACTION_TYPE="DIRECT PUSH to release branch"
            BRANCH_NAME="${{ github.ref_name }}"
            AUTHOR="${{ github.event.pusher.name }}"
            
            # Handle commits - GitHub event may have multiple commits
            COMMIT_MSG=""
            COMMIT_SHA=""
            
            # Try to get first commit info if available
            if [[ -n "${{ github.event.head_commit.id }}" ]]; then
              COMMIT_MSG="${{ github.event.head_commit.message }}"
              COMMIT_SHA="${{ github.event.head_commit.id }}"
              # Truncate commit message for display
              if [[ ${#COMMIT_MSG} -gt 60 ]]; then
                COMMIT_MSG="${COMMIT_MSG:0:57}..."
              fi
              LINK_TEXT="Commit: ${COMMIT_SHA:0:7} - ${COMMIT_MSG}"
              LINK_URL="${{ github.event.head_commit.url }}"
            else
              COMPARE_URL="${{ github.event.compare }}"
              LINK_TEXT="Push to release branch"
              LINK_URL="${COMPARE_URL:-${{ github.event.repository.html_url }}/tree/${{ github.ref_name }}}"
            fi
          fi
          
          # Validate required data
          if [[ -z "$ACTION_TYPE" || -z "$BRANCH_NAME" || -z "$AUTHOR" ]]; then
            echo "::error::Failed to extract required data from GitHub event"
            echo "::error::ACTION_TYPE: $ACTION_TYPE"
            echo "::error::BRANCH_NAME: $BRANCH_NAME" 
            echo "::error::AUTHOR: $AUTHOR"
            exit 1
          fi
          
          # Escape special characters for GitHub Actions output
          ACTION_TYPE=$(echo "$ACTION_TYPE" | sed 's/"/\\"/g')
          LINK_TEXT=$(echo "$LINK_TEXT" | sed 's/"/\\"/g')
          
          # Output variables for next step
          echo "action_type=$ACTION_TYPE" >> "$GITHUB_OUTPUT"
          echo "branch_name=$BRANCH_NAME" >> "$GITHUB_OUTPUT"  
          echo "author=$AUTHOR" >> "$GITHUB_OUTPUT"
          echo "link_text=$LINK_TEXT" >> "$GITHUB_OUTPUT"
          echo "link_url=$LINK_URL" >> "$GITHUB_OUTPUT"
          
          # Debug output
          echo "‚úÖ Extracted data:"
          echo "üìù Action Type: $ACTION_TYPE"
          echo "üåø Branch: $BRANCH_NAME"
          echo "üë§ Author: $AUTHOR"
          echo "üîó Link: $LINK_TEXT"
      - name: Get Slack webhook from Vault
        id: secrets
        uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/camunda/ci/github-actions SLACK_TOPMONOREPORELEASE_WEBHOOK_URL;
      - name: Send Slack notification
        id: slack-notification
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        continue-on-error: true  # Don't fail the workflow if Slack is down
        with:
          webhook: ${{ steps.secrets.outputs.SLACK_TOPMONOREPORELEASE_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "üì¢ Monorepo Release Branch Activity",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "**${{ steps.extract-data.outputs.action_type }}**"
                  }
                },
                {
                  "type": "section",
                  "text": 
                    {
                      "type": "mrkdwn",
                      "text": "üéØ **Repository:**\n${{ github.repository }}"
                    }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üåø **Branch:**\n`${{ steps.extract-data.outputs.branch_name }}`"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üìù **Author:**\n${{ steps.extract-data.outputs.author }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üîó <${{ steps.extract-data.outputs.link_url }}|${{ steps.extract-data.outputs.link_text }}>"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Triggered by GitHub Actions ‚Ä¢ <https://github.com/camunda/camunda/actions/runs/${{ github.run_id }}|View workflow run>"
                    }
                  ]
                }
              ]
            }
      - name: Log notification status
        if: always()
        run: |
          if [[ "${{ steps.slack-notification.outcome }}" == "success" ]]; then
            echo "‚úÖ Slack notification sent successfully"
            echo "::notice::Notified #top-monorepo-release about ${{ steps.extract-data.outputs.action_type }} on ${{ steps.extract-data.outputs.branch_name }}"
          else
            echo "‚ö†Ô∏è Slack notification failed but workflow continues"
            echo "::warning::Failed to notify #top-monorepo-release about ${{ steps.extract-data.outputs.action_type }} on ${{ steps.extract-data.outputs.branch_name }}"
          fi
      - name: Observe build status
        if: always()
        continue-on-error: true
        uses: ./.github/actions/observe-build-status
        with:
          build_status: ${{ job.status }}
          secret_vault_secretId: ${{ secrets.VAULT_SECRET_ID }}
          secret_vault_address: ${{ secrets.VAULT_ADDR }}
          secret_vault_roleId: ${{ secrets.VAULT_ROLE_ID }}
