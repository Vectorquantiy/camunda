# description: This workflow builds the release, triggered by our engineering process automation cluster. It creates the release based on the given input.
# type: Release
# owner: @camunda/monorepo-devops-team
name: Repo dispatch Release

on:
  repository_dispatch:
    types: [
      trigger_release_8_3,
      trigger_release_8_4,
      trigger_release_8_5,
      trigger_release_8_6,
      trigger_release_8_7,
      trigger_release_8_8
    ]

jobs:
  # Version 8.3 release
  run-release-8-3:
    if: github.event.action == 'trigger_release_8_3'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/camunda/.github/workflows/zeebe-release.yml@stable/8.3
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}

  # Version 8.4 release  
  run-release-8-4:
    if: github.event.action == 'trigger_release_8_4'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/camunda/.github/workflows/zeebe-release.yml@stable/8.4
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}

  # Version 8.5 release
  run-release-8-5:
    if: github.event.action == 'trigger_release_8_5'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/camunda/.github/workflows/zeebe-release.yml@stable/8.5
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}

  # Version 8.6 release
  run-release-8-6:
    if: github.event.action == 'trigger_release_8_6'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/camunda/.github/workflows/camunda-platform-release.yml@stable/8.6
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}
      releaseBranch: ${{ github.event.client_payload.releaseBranch }}

  # Version 8.7 release
  run-release-8-7:
    if: github.event.action == 'trigger_release_8_7'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/camunda/.github/workflows/camunda-platform-release.yml@stable/8.7
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}
      releaseBranch: ${{ github.event.client_payload.releaseBranch }}

  # Version 8.8 release
  run-release-8-8:
    if: github.event.action == 'trigger_release_8_8'
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: ./.github/workflows/camunda-platform-release.yml
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}
      releaseBranch: ${{ github.event.client_payload.releaseBranch }}

  notify-on-success:
    name: Send Slack notification on success
    runs-on: ubuntu-latest
    needs: [run-release-8-3, run-release-8-4, run-release-8-5, run-release-8-6, run-release-8-7, run-release-8-8]
    if: always() && (needs.run-release-8-3.result == 'success' || needs.run-release-8-4.result == 'success' || needs.run-release-8-5.result == 'success' || needs.run-release-8-6.result == 'success' || needs.run-release-8-7.result == 'success' || needs.run-release-8-8.result == 'success')
    timeout-minutes: 5
    permissions: {}  # GITHUB_TOKEN unused in this job
    steps:
      # Use vault-based notification for versions 8.6+
      - name: Import Secrets (8.6+)
        if: ${{ contains(fromJson('["trigger_release_8_6", "trigger_release_8_7", "trigger_release_8_8"]'), github.event.action) }}
        id: secrets
        uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/camunda/ci/github-actions SLACK_TOPMONOREPORELEASE_WEBHOOK_URL;

      - name: Send success Slack notification (8.6+)
        if: ${{ contains(fromJson('["trigger_release_8_6", "trigger_release_8_7", "trigger_release_8_8"]'), github.event.action) }}
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ steps.secrets.outputs.SLACK_TOPMONOREPORELEASE_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":success: *Release job for ${{ github.event.client_payload.releaseVersion }}* succeeded!\n"
                  }
                }
              ]
            }

      - name: Send success Slack notification (8.3-8.5)
        if: ${{ contains(fromJson('["trigger_release_8_3", "trigger_release_8_4", "trigger_release_8_5"]'), github.event.action) }}
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": ":success: Release job for ${{ github.event.client_payload.releaseVersion }} succeeded! :success:\n",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":success: Release job for ${{ github.event.client_payload.releaseVersion }} succeeded! :success:\n"
                  }
                }
              ]
            }

  notify-if-failed:
    name: Send Slack notification on failure
    runs-on: ubuntu-latest
    needs: [run-release-8-3, run-release-8-4, run-release-8-5, run-release-8-6, run-release-8-7, run-release-8-8]
    # if it's a dry run => no slack notification (remove noise in slack due to manual testing)
    # else => send slack notification as an actual release failed
    if: always() && (needs.run-release-8-3.result == 'failure' || needs.run-release-8-4.result == 'failure' || needs.run-release-8-5.result == 'failure' || needs.run-release-8-6.result == 'failure' || needs.run-release-8-7.result == 'failure' || needs.run-release-8-8.result == 'failure') && github.event.client_payload.dryRun == false
    timeout-minutes: 5
    permissions: {}  # GITHUB_TOKEN unused in this job
    steps:
      # Use vault-based notification for versions 8.6+
      - name: Import Secrets (8.6+)
        if: ${{ contains(fromJson('["trigger_release_8_6", "trigger_release_8_7", "trigger_release_8_8"]'), github.event.action) }}
        id: secrets
        uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/camunda/ci/github-actions SLACK_TOPMONOREPORELEASE_WEBHOOK_URL;

      - name: Send failure Slack notification (8.6+)
        if: ${{ contains(fromJson('["trigger_release_8_6", "trigger_release_8_7", "trigger_release_8_8"]'), github.event.action) }}
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ steps.secrets.outputs.SLACK_TOPMONOREPORELEASE_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # For posting a rich message using Block Kit
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":alarm: *Release job for ${{ github.event.client_payload.releaseVersion }}* failed!\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please check this <https://github.com/camunda/camunda/actions/runs/${{ github.run_id }}|GHA workflow run>."
                  }
                }
              ]
            }

      - name: Send failure Slack notification (8.3-8.5)
        if: ${{ contains(fromJson('["trigger_release_8_3", "trigger_release_8_4", "trigger_release_8_5"]'), github.event.action) }}
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": ":alarm: Release job for ${{ github.event.client_payload.releaseVersion }} failed! :alarm:\n",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":alarm: Release job for ${{ github.event.client_payload.releaseVersion }} failed! :alarm:\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please check the related workflow execution: https://github.com/camunda/camunda/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }